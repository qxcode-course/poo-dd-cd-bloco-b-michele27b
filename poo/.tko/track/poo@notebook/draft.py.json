{
    "patches": [
        {
            "label": "2025-10-28_20-54-48",
            "content": "@@ -1470,627 +1470,4 @@\n do%7D%22\n-%0A    %0Anotebook = Notebook()%0Awhile True:%0A    try:%0A        line = input()%0A    except EOFError:%0A        break%0A    if line == %22$end%22:%0A        break%0A    cmd = line.split()%0A    if not cmd:%0A        continue%0A    if cmd%5B0%5D == %22$show%22:%0A        print(notebook)%0A    elif cmd%5B0%5D == %22$ligar%22:%0A        notebook.ligar()%0A    elif cmd%5B0%5D == %22$desligar%22:%0A        notebook.desligar()%0A    elif cmd%5B0%5D == %22$usar%22:%0A        notebook.usar()%0A    elif cmd%5B0%5D == %22$conectar%22:%0A        notebook.carregador.conectar()%0A    elif cmd%5B0%5D == %22$desconectar%22:%0A        notebook.carregador.desconectar()%0A    elif cmd%5B0%5D == %22$carregar%22:%0A        notebook.carregar()\n",
            "lines": "53"
        },
        {
            "label": "2025-10-28_20-55-33",
            "content": "@@ -2,24 +2,25 @@\n lass Bateria\n+ \n :%0A    def __\n@@ -38,57 +38,52 @@\n , ca\n-pacidade):%0A        self.__capacidade = capacidade\n+rga: int = 0, carga_max: int = 100) -%3E None:\n %0A   \n@@ -96,53 +96,26 @@\n elf.\n-__\n carga\n- = capacidade%0A%0A    def getCarga(self):\n+: int = carga\n %0A   \n@@ -123,90 +123,39 @@\n     \n-return \n self.\n-__\n carga\n-%0A%0A    def getCapacidade(self):%0A        return self.__capacidade\n+_max: int = carga_max\n %0A%0A  \n@@ -160,19 +160,16 @@\n     def \n-des\n carregar\n@@ -172,33 +172,46 @@\n egar(self, valor\n-)\n+: int) -%3E None\n :%0A        self._\n@@ -213,17 +213,15 @@\n elf.\n-__\n carga \n--\n++\n = va\n@@ -244,19 +244,30 @@\n elf.\n-__\n carga \n-%3C 0\n+%3E self.carga_max\n :%0A  \n@@ -281,26 +281,24 @@\n    self.\n-__\n carga = \n 0%0A%0A    d\n@@ -289,17 +289,30 @@\n carga = \n-0\n+self.carga_max\n %0A%0A    de\n@@ -305,32 +305,35 @@\n ga_max%0A%0A    def \n+des\n carregar(self, v\n@@ -336,17 +336,30 @@\n f, valor\n-)\n+: int) -%3E None\n :%0A      \n@@ -369,17 +369,15 @@\n elf.\n-__\n carga \n-+\n+-\n = va\n@@ -400,35 +400,17 @@\n elf.\n-__\n carga \n-%3E self.__capacidade\n+%3C 0\n :%0A  \n@@ -428,18 +428,16 @@\n elf.\n-__\n carga = \n self\n@@ -436,105 +436,9 @@\n a = \n-self.__capacidade%0A%0A    def mostrar(self):%0A        print(f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22)%0A\n+0\n %0A%0Acl\n@@ -478,18 +478,8 @@\n self\n-, potencia\n ):%0A \n@@ -494,88 +494,80 @@\n elf.\n-__potencia = potencia%0A%0A    def getPotencia(self):%0A        return self.__potencia\n+conectado = False%0A%0A    def conectar(self):%0A        self.conectado = True\n %0A%0A  \n@@ -564,37 +564,41 @@\n = True%0A%0A    def \n-mostr\n+desconect\n ar(self):%0A      \n@@ -603,47 +603,30 @@\n     \n-print(f%22(Pot%C3%AAncia %7Bself.__potencia%7D)%22)%0A\n+self.conectado = False\n %0A%0Acl\n@@ -680,458 +680,66 @@\n elf.\n-__ligado = False%0A        self.__bateria = None%0A        self.__carregador = None%0A%0A    def setBateria(self, bateria):%0A        self.__bateria = bateria%0A        print(%22bateria adicionada%22)%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            b = self.__bateria%0A            self.__bateria = None%0A            print(%22bateria removida%22)%0A            return b%0A        print(%22erro: sem bateria%22)%0A%0A    def setCarregador(self, carregador):\n+bateria = Bateria()%0A        self.carregador = Carregador()\n %0A   \n@@ -752,72 +752,27 @@\n elf.\n-__carre\n+li\n gado\n-r\n  = \n-carregador%0A        print(%22carregador conectado%22)%0A\n+False%0A    \n %0A   \n@@ -804,79 +804,30 @@\n  if \n-(\n self.\n-__\n bateria\n- and self.__bateria.getC\n+.c\n arga\n-()\n  %3E 0\n-) or self.__carregador\n :%0A  \n@@ -833,34 +833,32 @@\n            self.\n-__\n ligado = True%0A  \n@@ -871,89 +871,35 @@\n     \n-print(%22notebook ligado%22)%0A        else:%0A            print(%22n%C3%A3o foi poss%C3%ADvel ligar%22\n+self.bateria.descarregar(10\n )%0A%0A \n@@ -933,99 +933,27 @@\n     \n-if \n self.\n-__ligado:%0A            self.__ligado = False%0A            print(%22notebook desligado%22)\n+ligado = False\n %0A%0A  \n@@ -971,15 +971,8 @@\n self\n-, tempo\n ):%0A \n@@ -981,27 +981,21 @@\n      if \n-not \n self.\n-__\n ligado:%0A\n@@ -1010,214 +1010,57 @@\n     \n-print(%22notebook desligado%22)%0A            return%0A        if not \n self.\n-__\n bateria\n- and not self.__carregador:%0A            print(%22erro: sem energia%22)%0A            self.desligar()%0A            return%0A\n+.descarregar(10)%0A      \n       \n-  \n if self.\n __ba\n@@ -1059,488 +1059,148 @@\n elf.\n-__\n bateria\n-:%0A            if self.__carregador:%0A                self.__bateria.carregar(self.__carregador.getPotencia() * tempo)%0A            else:%0A                if tempo %3E= self.__bateria.getCarga():%0A                    tempo = self.__bateria.getCarga()%0A                    self.__bateria.descarregar(tempo)%0A                    print(f%22Usando por %7Btempo%7D minutos, notebook descarregou%22)%0A                    self.desligar()%0A                    return%0A                self.__\n+.carga == 0:%0A                self.desligar()%0A%0A    def carregar(self):%0A        if self.carregador.conectado:%0A            self.\n bateria.\n desc\n@@ -1187,35 +1187,32 @@\n    self.bateria.\n-des\n carregar(tempo)%0A\n@@ -1208,132 +1208,10 @@\n gar(\n-tempo)%0A                print(f%22Usando por %7Btempo%7D minutos%22)%0A        else:%0A            print(%22Notebook utilizado com sucesso%22\n+10\n )%0A%0A \n@@ -1217,23 +1217,23 @@\n     def \n-mostrar\n+__str__\n (self):%0A\n@@ -1244,25 +1244,25 @@\n     \n-status = %22L\n+ligado = 'l\n igado\n-%22\n+'\n  if \n@@ -1266,18 +1266,16 @@\n if self.\n-__\n ligado e\n@@ -1282,18 +1282,18 @@\n lse \n-%22D\n+'d\n esligado\n %22%0A  \n@@ -1288,17 +1288,17 @@\n esligado\n-%22\n+'\n %0A       \n@@ -1302,160 +1302,31 @@\n     \n-if self.__bateria:%0A            bat = f%22(%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)%22%0A        else:%0A            bat = %22Nenhuma%22%0A       \n+conectado = 'conectado'\n  if \n@@ -1326,26 +1326,24 @@\n do' if self.\n-__\n carregador:%0A\n@@ -1344,110 +1344,26 @@\n ador\n-:%0A            car = f%22(Pot%C3%AAncia %7Bself.__carregador.getPotencia()%7D)%22%0A        else:%0A            car = %22D\n+.conectado else 'd\n esco\n@@ -1369,17 +1369,17 @@\n onectado\n-%22\n+'\n %0A       \n@@ -1383,71 +1383,100 @@\n     \n-print(f%22Status: %7Bstatus%7D, Bateria: %7Bbat%7D, Carre\n+return f%22bateria: %7Bself.bateria.carga%7D/%7Bself.bateria.carga_max%7D, %7Bli\n gado\n-r: %7Bcar%7D%22)%0A%0A\n+%7D, %7Bconectado%7D%22%0A    \n %0Anot\n@@ -1629,24 +1629,57 @@\n ine.split()%0A\n+    if not cmd:%0A        continue%0A\n     if cmd%5B0\n@@ -1685,23 +1685,20 @@\n 0%5D == %22$\n-mostrar\n+show\n %22:%0A     \n@@ -1700,24 +1700,30 @@\n         \n+print(\n notebook\n .mostrar\n@@ -1714,25 +1714,16 @@\n notebook\n-.mostrar(\n )%0A    el\n@@ -1880,27 +1880,16 @@\n ok.usar(\n-int(cmd%5B1%5D)\n )%0A    el\n@@ -1903,23 +1903,24 @@\n 0%5D == %22$\n-bateria\n+conectar\n %22:%0A     \n@@ -1935,39 +1935,28 @@\n ook.\n-setBateria(Bateria(int(cmd%5B1%5D))\n+carregador.conectar(\n )%0A  \n@@ -1974,25 +1974,26 @@\n 0%5D == %22$\n-carregado\n+desconecta\n r%22:%0A    \n@@ -2009,12 +2009,9 @@\n ook.\n-setC\n+c\n arre\n@@ -2019,32 +2019,21 @@\n ador\n-(Carregador(int(cmd%5B1%5D))\n+.desconectar(\n )%0A  \n@@ -2055,17 +2055,16 @@\n = %22$\n-rmbateria\n+carregar\n %22:%0A \n@@ -2073,12 +2073,8 @@\n     \n- b =\n  not\n@@ -2083,53 +2083,14 @@\n ook.\n-rmBateria()%0A        if b:%0A            b.mostr\n+carreg\n ar()\n",
            "lines": "79"
        },
        {
            "label": "2025-10-28_21-04-12",
            "content": "@@ -1,3944 +1,1574 @@\n-class Bateria:%0A    def __init__(self, capacidade: int) -%3E None:%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade%0A%0A    def getCarga(self) -%3E int:%0A        return self.__carga%0A%0A    def getCapacidade(self) -%3E int:%0A        return self.__capacidade%0A%0A    def descarregar(self, valor: int) -%3E None:%0A        self.__carga -= valor%0A        if self.__carga %3C 0:%0A            self.__carga = 0%0A%0A    def carregar(self, valor: int) -%3E None:%0A        self.__carga += valor%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def mostrar(self) -%3E None:%0A        print(f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22)%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int) -%3E None:%0A        self.__potencia: int = potencia%0A%0A    def getPotencia(self) -%3E int:%0A        return self.__potencia%0A%0A    def mostrar(self) -%3E None:%0A        print(f%22(Pot%C3%AAncia %7Bself.__potencia%7D)%22)%0A%0A%0Afrom typing import Optional%0A%0Aclass Notebook:%0A    def __init__(self) -%3E None:%0A        self.__ligado = False%0A        self.__bateria = None%0A    def setBateria(self, bateria: Bateria) -%3E None:%0A%0A    def setBateria(self, bateria):%0A        self.__bateria = bateria%0A    def rmBateria(self) -%3E Optional%5BBateria%5D:%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            b = self.__bateria%0A            self.__bateria = None%0A            print(%22bateria removida%22)%0A            return b%0A    def setCarregador(self, carregador: Carregador) -%3E None:%0A%0A    def setCarregador(self, carregador):%0A        self.__carregador = carregador%0A    def ligar(self) -%3E None:%0A%0A    def ligar(self):%0A        if (self.__bateria and self.__bateria.getCarga() %3E 0) or self.__carregador:%0A            self.__ligado = True%0A            print(%22notebook ligado%22)%0A        else:%0A    def desligar(self) -%3E None:%0A%0A    def desligar(self):%0A        if self.__ligado:%0A            self.__ligado = False%0A    def usar(self, tempo: int) -%3E None:%0A%0A    def usar(self, tempo):%0A        if not self.__ligado:%0A            print(%22notebook desligado%22)%0A            return%0A        if not self.__bateria and not self.__carregador:%0A            print(%22erro: sem energia%22)%0A            self.desligar()%0A            return%0A        if self.__bateria:%0A            if self.__carregador:%0A                self.__bateria.carregar(self.__carregador.getPotencia() * tempo)%0A            else:%0A                if tempo %3E= self.__bateria.getCarga():%0A                    tempo = self.__bateria.getCarga()%0A                    self.__bateria.descarregar(tempo)%0A                    print(f%22Usando por %7Btempo%7D minutos, notebook descarregou%22)%0A                    self.desligar()%0A                    return%0A                self.__bateria.descarregar(tempo)%0A                print(f%22Usando por %7Btempo%7D minutos%22)%0A        else:%0A            print(%22Notebook utilizado com sucesso%22)%0A%0A    def mostrar(self):%0A        status = %22Ligado%22 if self.__ligado else %22Desligado%22%0A        if self.__bateria:%0A            bat = f%22(%7Bself.__bateria.getCarga()%7D/%7Bself.__bateria.getCapacidade()%7D)%22%0A        else:%0A            bat = %22Nenhuma%22%0A        if self.__carregador:%0A            car = f%22(Pot%C3%AAncia %7Bself.__carregador.getPotencia()%7D)%22%0A        else:%0A            car = %22Desconectado%22%0A        print(f%22Status: %7Bstatus%7D, Bateria: %7Bbat%7D, Carregador: %7Bcar%7D%22)%0A%0A%0Anotebook = Notebook()%0Awhile True:%0A    try:%0A        line = input()%0A    except EOFError:%0A        break%0A    if line == %22$end%22:%0A        break%0A    cmd = line.split()%0A    if cmd%5B0%5D == %22$mostrar%22:%0A        notebook.mostrar()%0A    elif cmd%5B0%5D == %22$ligar%22:%0A        notebook.ligar()%0A    elif cmd%5B0%5D == %22$desligar%22:%0A        notebook.desligar()%0A    elif cmd%5B0%5D == %22$usar%22:%0A        notebook.usar(int(cmd%5B1%5D))%0A    elif cmd%5B0%5D == %22$bateria%22:%0A        notebook.setBateria(Bateria(int(cmd%5B1%5D)))%0A    elif cmd%5B0%5D == %22$carregador%22:%0A        notebook.setCarregador(Carregador(int(cmd%5B1%5D)))%0A    elif cmd%5B0%5D == %22$rmbateria%22:%0A        b = notebook.rmBateria()%0A        if b:%0A            b.mostrar()\n+@@ -41,30 +41,17 @@%0A pacidade%0A-: int) -%253E None%0A+)%0A :%250A      %0A@@ -69,21 +69,16 @@%0A pacidade%0A-: int%0A  = capac%0A@@ -103,21 +103,16 @@%0A .__carga%0A-: int%0A  = capac%0A@@ -136,31 +136,24 @@%0A tCarga(self)%0A- -%253E int%0A :%250A        re%0A@@ -194,31 +194,24 @@%0A cidade(self)%0A- -%253E int%0A :%250A        re%0A@@ -261,38 +261,25 @@%0A (self, valor%0A-: int) -%253E None%0A+)%0A :%250A        se%0A@@ -385,30 +385,17 @@%0A f, valor%0A-: int) -%253E None%0A+)%0A :%250A      %0A@@ -526,32 +526,24 @@%0A ostrar(self)%0A- -%253E None%0A :%250A        pr%0A@@ -638,30 +638,17 @@%0A potencia%0A-: int) -%253E None%0A+)%0A :%250A      %0A@@ -664,21 +664,16 @@%0A potencia%0A-: int%0A  = poten%0A@@ -706,15 +706,8 @@%0A elf)%0A- -%253E int%0A :%250A  %0A@@ -753,32 +753,24 @@%0A ostrar(self)%0A- -%253E None%0A :%250A        pr%0A@@ -812,37 +812,8 @@%0A )%250A%250A%250A%0A-from typing import Optional%250A%250A%0A clas%0A@@ -846,24 +846,16 @@%0A __(self)%0A- -%253E None%0A :%250A      %0A@@ -916,55 +916,36 @@%0A     %0A-def setBateria(self, bateria: Bateria) -%253E%0A+    self.__carregador =%0A  None%0A-:%0A %250A%250A  %0A@@ -1018,49 +1018,39 @@%0A     %0A-def rmBateria(self) -%253E Optional%255BBateria%255D:%0A+    print(%2522bateria adicionada%2522)%0A %250A%250A  %0A@@ -1243,64 +1243,38 @@%0A     %0A-def setCarregador(self, carregador: Carregador) -%253E None:%0A+    print(%2522erro: sem bateria%2522)%0A %250A%250A  %0A@@ -1359,32 +1359,41 @@%0A     %0A-def ligar(self) -%253E None:%0A+    print(%2522carregador conectado%2522)%0A %250A%250A  %0A@@ -1587,35 +1587,47 @@%0A     %0A-def desligar(self) -%253E None:%0A+        print(%2522n%25C3%25A3o foi poss%25C3%25ADvel ligar%2522)%0A %250A%250A  %0A@@ -1716,43 +1716,43 @@%0A     %0A-def usar(self, tempo: int) -%253E None:%0A+        print(%2522notebook desligado%2522)%0A %250A%250A  %0A\n",
            "lines": "92"
        },
        {
            "label": "2025-10-28_21-06-02",
            "content": "@@ -1014,14 +1014,8 @@\n gado\n-: bool\n  = F\n@@ -1045,89 +1045,67 @@\n eria\n-: Optional%5BBateria%5D = None%0A        self.__carregador: Optional%5BCarregador%5D =\n+ = None%0A    def setBateria(self, bateria: Bateria) -%3E\n  None\n+:\n %0A%0A  \n@@ -1134,34 +1134,17 @@\n  bateria\n-: Bateria) -%3E None\n+)\n :%0A      \n@@ -1170,17 +1170,16 @@\n bateria%0A\n-%0A\n     def \n@@ -1215,16 +1215,42 @@\n ateria%5D:\n+%0A%0A    def rmBateria(self):\n %0A       \n@@ -1294,25 +1294,16 @@\n        b\n-: Bateria\n  = self.\n@@ -1409,29 +1409,8 @@\n n b%0A\n-        return None%0A%0A\n     \n@@ -1457,32 +1457,74 @@\n egador) -%3E None:\n+%0A%0A    def setCarregador(self, carregador):\n %0A        self.__\n@@ -1547,17 +1547,16 @@\n regador%0A\n-%0A\n     def \n@@ -1567,32 +1567,54 @@\n r(self) -%3E None:\n+%0A%0A    def ligar(self):\n %0A        if (sel\n@@ -1629,20 +1629,8 @@\n ria \n-is not None \n and \n@@ -1676,36 +1676,24 @@\n __carregador\n- is not None\n :%0A          \n@@ -1774,42 +1774,35 @@\n     \n-        print(%22erro: sem energia%22)\n+def desligar(self) -%3E None:\n %0A%0A  \n@@ -1817,32 +1817,24 @@\n sligar(self)\n- -%3E None\n :%0A        if\n@@ -1883,17 +1883,16 @@\n = False%0A\n-%0A\n     def \n@@ -1914,32 +1914,60 @@\n o: int) -%3E None:\n+%0A%0A    def usar(self, tempo):\n %0A        if not \n@@ -2043,32 +2043,36 @@\n turn%0A        if \n+not \n self.__bateria i\n@@ -2074,20 +2074,16 @@\n ria \n-is None \n and \n+not \n self\n@@ -2099,16 +2099,8 @@\n ador\n- is None\n :%0A  \n@@ -2204,36 +2204,24 @@\n lf.__bateria\n- is not None\n :%0A          \n@@ -2238,36 +2238,24 @@\n __carregador\n- is not None\n :%0A          \n@@ -2835,32 +2835,24 @@\n ostrar(self)\n- -%3E None\n :%0A        st\n@@ -2922,36 +2922,24 @@\n lf.__bateria\n- is not None\n :%0A          \n@@ -3082,28 +3082,16 @@\n rregador\n- is not None\n :%0A      \n",
            "lines": "133"
        },
        {
            "label": "2025-10-28_21-08-19",
            "content": "class Bateria:\n    def __init__(self, capacidade: int) -> None:\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade\n\n    def getCarga(self) -> int:\n        return self.__carga\n\n    def getCapacidade(self) -> int:\n        return self.__capacidade\n\n    def descarregar(self, valor: int) -> None:\n        self.__carga -= valor\n        if self.__carga < 0:\n            self.__carga = 0\n\n    def carregar(self, valor: int) -> None:\n        self.__carga += valor\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n\n    def mostrar(self) -> None:\n        print(f\"({self.__carga}/{self.__capacidade})\")\n\n\nclass Carregador:\n    def __init__(self, potencia: int) -> None:\n        self.__potencia: int = potencia\n\n    def getPotencia(self) -> int:\n        return self.__potencia\n\n    def mostrar(self) -> None:\n        print(f\"(Pot\u00eancia {self.__potencia})\")\n\n\nfrom typing import Optional\n\nclass Notebook:\n    def __init__(self) -> None:\n        self.__ligado: bool = False\n        self.__bateria: Optional[Bateria] = None\n        self.__carregador: Optional[Carregador] = None\n\n    def setBateria(self, bateria: Bateria) -> None:\n        self.__bateria = bateria\n\n    def rmBateria(self) -> Optional[Bateria]:\n        if self.__bateria is not None:\n            b: Bateria = self.__bateria\n            self.__bateria = None\n            print(\"bateria removida\")\n            return b\n        return None\n\n    def setCarregador(self, carregador: Carregador) -> None:\n        self.__carregador = carregador\n\n    def ligar(self) -> None:\n        if (self.__bateria is not None and self.__bateria.getCarga() > 0) or self.__carregador is not None:\n            self.__ligado = True\n            print(\"notebook ligado\")\n        else:\n            print(\"erro: sem energia\")\n\n    def desligar(self) -> None:\n        if self.__ligado:\n            self.__ligado = False\n\n    def usar(self, tempo: int) -> None:\n        if not self.__ligado:\n            print(\"notebook desligado\")\n            return\n        if self.__bateria is None and self.__carregador is None:\n            print(\"erro: sem energia\")\n            self.desligar()\n            return\n        if self.__bateria is not None:\n            if self.__carregador is not None:\n                self.__bateria.carregar(self.__carregador.getPotencia() * tempo)\n            else:\n                if tempo >= self.__bateria.getCarga():\n                    tempo = self.__bateria.getCarga()\n                    self.__bateria.descarregar(tempo)\n                    print(f\"Usando por {tempo} minutos, notebook descarregou\")\n                    self.desligar()\n                    return\n                self.__bateria.descarregar(tempo)\n                print(f\"Usando por {tempo} minutos\")\n        else:\n            print(\"Notebook utilizado com sucesso\")\n\n    def mostrar(self) -> None:\n        status = \"Ligado\" if self.__ligado else \"Desligado\"\n        if self.__bateria is not None:\n            bat = f\"({self.__bateria.getCarga()}/{self.__bateria.getCapacidade()})\"\n        else:\n            bat = \"Nenhuma\"\n        if self.__carregador is not None:\n            car = f\"(Pot\u00eancia {self.__carregador.getPotencia()})\"\n        else:\n            car = \"Desconectado\"\n        print(f\"Status: {status}, Bateria: {bat}, Carregador: {car}\")\n\n\nnotebook = Notebook()\nwhile True:\n    try:\n        line = input()\n    except EOFError:\n        break\n    if line == \"$end\":\n        break\n    cmd = line.split()\n    if cmd[0] == \"$mostrar\":\n        notebook.mostrar()\n    elif cmd[0] == \"$ligar\":\n        notebook.ligar()\n    elif cmd[0] == \"$desligar\":\n        notebook.desligar()\n    elif cmd[0] == \"$usar\":\n        notebook.usar(int(cmd[1]))\n    elif cmd[0] == \"$bateria\":\n        notebook.setBateria(Bateria(int(cmd[1])))\n    elif cmd[0] == \"$carregador\":\n        notebook.setCarregador(Carregador(int(cmd[1])))\n    elif cmd[0] == \"$rmbateria\":\n        b = notebook.rmBateria()\n        if b:\n            b.mostrar()",
            "lines": "130"
        }
    ]
}