{
    "patches": [
        {
            "label": "2025-10-28_18-32-49",
            "content": "@@ -1,482 +0,0 @@\n-class Moto:%0A    def __init__ (self, nome: str, dinheiro: int):%0A        self.__nome = nome%0A        self.__dinheiro = dinheiro%0A%0A    def get_nome(self):%0A        return self.__nome%0A    %0A    def get_dinheiro(self):%0A        return self.__dinheiro%0A    %0A    def pagar(self, valor: int):%0A        if valor %3E self.__dinheiro:%0A            pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return pago%0A        else:%0A            self.__dinheiro -= valor%0A            return valor%0A\n",
            "lines": "0"
        },
        {
            "label": "2025-10-28_18-44-33",
            "content": "@@ -1,20 +1,18 @@\n class \n-Pessoa\n+Moto\n :%0A    de\n@@ -9,30 +9,33 @@\n to:%0A    def \n+_\n _init_\n+_ \n (self, nome:\n@@ -170,17 +170,21 @@\n .__nome%0A\n+    \n %0A\n-\n     def \n@@ -226,33 +226,37 @@\n self.__dinheiro%0A\n+    \n %0A\n-\n     def pagar(se\n@@ -479,2179 +479,4 @@\n lor%0A\n-%0A    def receber(self, valor: int):%0A        self.__dinheiro += valor%0A%0A    def _str_(self):%0A        return f%22%7Bself._nome%7D:%7Bself._dinheiro%7D%22%0A%0A%0Aclass Moto:%0A    def _init_(self):%0A        self.__custo = 0%0A        self.__motorista = None%0A        self.__passageiro = None%0A%0A    def set_driver(self, nome: str, dinheiro: int):%0A        self.__motorista = Pessoa(nome, dinheiro)%0A%0A    def set_pass(self, nome: str, dinheiro: int):%0A        self.__passageiro = Pessoa(nome, dinheiro)%0A%0A    def drive(self, distancia: int):%0A        if self._motorista is None or self._passageiro is None:%0A            print(%22fail: missing driver or passenger%22)%0A            return%0A        self.__custo += distancia%0A%0A    def leave_pass(self):%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger%22)%0A            return%0A%0A        valor_pago = self._passageiro.pagar(self._custo)%0A%0A        if valor_pago %3C self.__custo:%0A            print(%22fail: Passenger does not have enough money%22)%0A%0A        print(f%22%7Bself._passageiro.get_nome()%7D:%7Bself._passageiro.get_dinheiro()%7D left%22)%0A%0A%0A        self._motorista.receber(self._custo)%0A%0A%0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def show(self):%0A        driver_str = str(self._motorista) if self._motorista else %22None%22%0A        pass_str = str(self._passageiro) if self._passageiro else %22None%22%0A        print(f%22Cost: %7Bself.__custo%7D, Driver: %7Bdriver_str%7D, Passenger: %7Bpass_str%7D%22)%0A%0A%0Adef main():%0A    moto = Moto()%0A    while True:%0A        try:%0A            line = input()%0A            parts = line.strip().split()%0A            if len(parts) == 0:%0A                continue%0A            cmd = parts%5B0%5D%0A%0A            print(f%22$%7Bline%7D%22)%0A%0A            if cmd == %22end%22:%0A                break%0A            elif cmd == %22show%22:%0A                moto.show()%0A            elif cmd == %22setDriver%22:%0A                moto.set_driver(parts%5B1%5D, int(parts%5B2%5D))%0A            elif cmd == %22setPass%22:%0A                moto.set_pass(parts%5B1%5D, int(parts%5B2%5D))%0A            elif cmd == %22drive%22:%0A                moto.drive(int(parts%5B1%5D))%0A            elif cmd == %22leavePass%22:%0A                moto.leave_pass()%0A        except EOFError:%0A            break%0A%0A%0Aif _name_ == %22_main_%22:%0A%C2%A0%C2%A0%C2%A0%C2%A0main()\n",
            "lines": "19"
        },
        {
            "label": "2025-10-28_18-50-18",
            "content": "@@ -11,32 +11,30 @@\n oa:%0A    def \n-_\n _init_\n-_\n (self, nome:\n@@ -65,24 +65,25 @@\n       self._\n+_\n nome = nome%0A\n@@ -88,32 +88,33 @@\n e%0A        self._\n+_\n dinheiro = dinhe\n@@ -159,24 +159,25 @@\n eturn self._\n+_\n nome%0A%0A    de\n@@ -215,24 +215,25 @@\n eturn self._\n+_\n dinheiro%0A%0A  \n@@ -284,24 +284,25 @@\n lor %3E self._\n+_\n dinheiro:%0A  \n@@ -320,24 +320,25 @@\n ago = self._\n+_\n dinheiro%0A   \n@@ -344,32 +344,33 @@\n           self._\n+_\n dinheiro = 0%0A   \n@@ -414,32 +414,33 @@\n           self._\n+_\n dinheiro -= valo\n@@ -512,24 +512,25 @@\n       self._\n+_\n dinheiro += \n@@ -548,15 +548,13 @@\n def \n-_\n _str_\n-_\n (sel\n@@ -631,16 +631,14 @@\n def \n-_\n _init_\n-_\n (sel\n@@ -647,32 +647,33 @@\n :%0A        self._\n+_\n custo = 0%0A      \n@@ -672,32 +672,33 @@\n 0%0A        self._\n+_\n motorista = None\n@@ -704,32 +704,33 @@\n e%0A        self._\n+_\n passageiro = Non\n@@ -790,32 +790,33 @@\n :%0A        self._\n+_\n motorista = Pess\n@@ -891,32 +891,33 @@\n :%0A        self._\n+_\n passageiro = Pes\n@@ -1122,24 +1122,25 @@\n       self._\n+_\n custo += dis\n@@ -1182,32 +1182,33 @@\n        if self._\n+_\n passageiro is No\n@@ -1355,24 +1355,25 @@\n ago %3C self._\n+_\n custo:%0A     \n@@ -1524,91 +1524,9 @@\n %22)%0A%0A\n-        # give the driver the amount actually paid%0A        if self._motorista:%0A    \n+%0A\n     \n@@ -1557,21 +1557,23 @@\n ber(\n-valor_pag\n+self._cust\n o)%0A%0A\n+%0A\n     \n@@ -1578,24 +1578,25 @@\n       self._\n+_\n passageiro =\n@@ -1611,24 +1611,25 @@\n       self._\n+_\n custo = 0%0A%0A \n@@ -1818,24 +1818,25 @@\n ost: %7Bself._\n+_\n custo%7D, Driv\n@@ -2615,36 +2615,32 @@\n %0Aif \n-_\n _name_\n-_\n  == %22_\n-_\n main_\n-_\n %22:%0A\n-    \n+%C2%A0%C2%A0%C2%A0%C2%A0\n main\n",
            "lines": "100"
        },
        {
            "label": "2025-10-28_18-52-29",
            "content": "@@ -1505,24 +1505,75 @@\n ()%7D left%22)%0A%0A\n+        # give the driver the amount actually paid%0A\n         if s\n",
            "lines": "100"
        },
        {
            "label": "2025-10-28_18-54-06",
            "content": "@@ -1381,17 +1381,17 @@\n (%22fail: \n-p\n+P\n assenger\n@@ -1435,16 +1435,19 @@\n   print(\n+f%22%7B\n self._pa\n@@ -1450,24 +1450,76 @@\n ._passageiro\n+.get_nome()%7D:%7Bself._passageiro.get_dinheiro()%7D left%22\n )%0A%0A        i\n@@ -1726,30 +1726,28 @@\n rista else %22\n-(n\n+N\n one\n-)\n %22%0A        pa\n@@ -1807,14 +1807,12 @@\n se %22\n-(n\n+N\n one\n-)\n %22%0A  \n@@ -1829,13 +1829,14 @@\n t(f%22\n-c\n+C\n ost:\n+ \n %7Bsel\n@@ -1850,15 +1850,16 @@\n o%7D, \n-d\n+D\n river:\n+ \n %7Bdri\n@@ -1868,17 +1868,17 @@\n r_str%7D, \n-p\n+P\n assenger\n@@ -1878,16 +1878,17 @@\n ssenger:\n+ \n %7Bpass_st\n",
            "lines": "99"
        },
        {
            "label": "2025-10-28_19-00-04",
            "content": "@@ -1381,17 +1381,17 @@\n (%22fail: \n-P\n+p\n assenger\n@@ -1435,19 +1435,16 @@\n   print(\n-f%22%7B\n self._pa\n@@ -1455,60 +1455,8 @@\n eiro\n-.get_nome()%7D:%7Bself._passageiro.get_dinheiro()%7D left%22\n )%0A%0A \n@@ -1671,28 +1671,30 @@\n rista else %22\n-N\n+(n\n one\n+)\n %22%0A        pa\n@@ -1750,20 +1750,22 @@\n o else %22\n-N\n+(n\n one\n+)\n %22%0A      \n@@ -1778,14 +1778,13 @@\n t(f%22\n-C\n+c\n ost:\n- \n %7Bsel\n@@ -1798,16 +1798,15 @@\n o%7D, \n-D\n+d\n river:\n- \n %7Bdri\n@@ -1815,17 +1815,17 @@\n r_str%7D, \n-P\n+p\n assenger\n@@ -1825,17 +1825,16 @@\n ssenger:\n- \n %7Bpass_st\n",
            "lines": "99"
        },
        {
            "label": "2025-10-28_19-02-40",
            "content": "@@ -1573,26 +1573,25 @@\n receber(\n-self._cust\n+valor_pag\n o)%0A%0A    \n",
            "lines": "99"
        },
        {
            "label": "2025-10-28_19-14-10",
            "content": "class Pessoa:\n    def __init__(self, nome: str, dinheiro: int):\n        self._nome = nome\n        self._dinheiro = dinheiro\n\n    def get_nome(self):\n        return self._nome\n\n    def get_dinheiro(self):\n        return self._dinheiro\n\n    def pagar(self, valor: int):\n        if valor > self._dinheiro:\n            pago = self._dinheiro\n            self._dinheiro = 0\n            return pago\n        else:\n            self._dinheiro -= valor\n            return valor\n\n    def receber(self, valor: int):\n        self._dinheiro += valor\n\n    def __str__(self):\n        return f\"{self._nome}:{self._dinheiro}\"\n\n\nclass Moto:\n    def __init__(self):\n        self._custo = 0\n        self._motorista = None\n        self._passageiro = None\n\n    def set_driver(self, nome: str, dinheiro: int):\n        self._motorista = Pessoa(nome, dinheiro)\n\n    def set_pass(self, nome: str, dinheiro: int):\n        self._passageiro = Pessoa(nome, dinheiro)\n\n    def drive(self, distancia: int):\n        if self._motorista is None or self._passageiro is None:\n            print(\"fail: missing driver or passenger\")\n            return\n        self._custo += distancia\n\n    def leave_pass(self):\n        if self._passageiro is None:\n            print(\"fail: no passenger\")\n            return\n\n        valor_pago = self._passageiro.pagar(self._custo)\n\n        if valor_pago < self._custo:\n            print(\"fail: Passenger does not have enough money\")\n\n        print(f\"{self._passageiro.get_nome()}:{self._passageiro.get_dinheiro()} left\")\n\n        if self._motorista:\n            self._motorista.receber(self._custo)\n\n        self._passageiro = None\n        self._custo = 0\n\n    def show(self):\n        driver_str = str(self._motorista) if self._motorista else \"None\"\n        pass_str = str(self._passageiro) if self._passageiro else \"None\"\n        print(f\"Cost: {self._custo}, Driver: {driver_str}, Passenger: {pass_str}\")\n\n\ndef main():\n    moto = Moto()\n    while True:\n        try:\n            line = input()\n            parts = line.strip().split()\n            if len(parts) == 0:\n                continue\n            cmd = parts[0]\n\n            print(f\"${line}\")\n\n            if cmd == \"end\":\n                break\n            elif cmd == \"show\":\n                moto.show()\n            elif cmd == \"setDriver\":\n                moto.set_driver(parts[1], int(parts[2]))\n            elif cmd == \"setPass\":\n                moto.set_pass(parts[1], int(parts[2]))\n            elif cmd == \"drive\":\n                moto.drive(int(parts[1]))\n            elif cmd == \"leavePass\":\n                moto.leave_pass()\n        except EOFError:\n            break\n\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "99"
        }
    ]
}